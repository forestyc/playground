// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameEpidemicUser = "epidemic_user"

// EpidemicUser mapped from table <epidemic_user>
type EpidemicUser struct {
	ID                       int32     `gorm:"column:id;type:int;primaryKey;autoIncrement:true" json:"id"`
	Name                     []byte    `gorm:"column:name;type:varbinary(500)" json:"name"`
	Sex                      string    `gorm:"column:sex;type:varchar(191)" json:"sex"`                                           // 性别
	Mobile                   string    `gorm:"column:mobile;type:varchar(20);uniqueIndex:unique_mobile,priority:1" json:"mobile"` // 手机号
	BirthDate                time.Time `gorm:"column:birth_date;type:date;not null" json:"birth_date"`                            // 生日
	Company                  string    `gorm:"column:company;type:varchar(50);not null" json:"company"`                           // 公司
	Department               string    `gorm:"column:department;type:varchar(50);not null" json:"department"`                     // 部门
	Organization             string    `gorm:"column:organization;type:varchar(50);not null" json:"organization"`                 // 编制
	Location                 string    `gorm:"column:location;type:varchar(50);not null" json:"location"`                         // 常驻工作地
	ResidentialAddressCode   []byte    `gorm:"column:residential_address_code;type:varbinary(500)" json:"residential_address_code"`
	ResidentialAddressDetail []byte    `gorm:"column:residential_address_detail;type:varbinary(500)" json:"residential_address_detail"`
	VaccinationRecord        string    `gorm:"column:vaccination_record;type:varchar(50);not null" json:"vaccination_record"`        // 疫苗接种记录：字典值
	VaccinationTime          string    `gorm:"column:vaccination_time;type:varchar(100)" json:"vaccination_time"`                    // 疫苗接种记录时间：json
	ReasonForNonVaccination  string    `gorm:"column:reason_for_non_vaccination;type:varchar(50)" json:"reason_for_non_vaccination"` // 未接种完全原因：字典值
	Role                     string    `gorm:"column:role;type:varchar(50)" json:"role"`                                             // 角色：字典值
	Status                   string    `gorm:"column:status;type:varchar(50)" json:"status"`                                         // 审核状态：字典值
	ApprovedBy               string    `gorm:"column:approved_by;type:varchar(50)" json:"approved_by"`                               // 审批人
	ApprovalComments         string    `gorm:"column:approval_comments;type:varchar(200)" json:"approval_comments"`                  // 审批意见
	ApprovalDate             time.Time `gorm:"column:approval_date;type:datetime(3)" json:"approval_date"`                           // 审批日期
	UserID                   string    `gorm:"column:user_id;type:varchar(191)" json:"user_id"`
	ResidentialAddressName   []byte    `gorm:"column:residential_address_name;type:varbinary(500)" json:"residential_address_name"`
	Label                    string    `gorm:"column:label;type:varchar(50)" json:"label"` // 标签
}

// TableName EpidemicUser's table name
func (*EpidemicUser) TableName() string {
	return TableNameEpidemicUser
}
