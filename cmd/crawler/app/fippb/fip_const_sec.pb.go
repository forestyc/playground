//*
// Copyright (C) 2017-2021，大连商品交易所 大连飞创信息技术有限公司
//
// @brief 协议号与错误码定义
//
// @author fengbaoxin@dce.com.cn,houyahui@dce.com.cn
//
// @date 2021-9-10
// @note 组内评审专家：
// @note 组外评审专家：

//*
// 协议段使用规则(OPCODE分配区间)：
//   client-proxy： 1000 ~ 3999,其中:
//               1000-2999 : 控制指令;
//               3000-3199 : 国内期货/OTC/基差/互换/财讯通套利;
//               3200-3299 : 场外仓单;
//               3300-3399 : 场外互换;
//               3500~3599 : 国内证券;
//               3613-3699 : 路孚特CME外盘使用;
//               3700~3799 : 上海黄金交易所使用;
//
//   user-proxy交互：4000 ~ 4999,其中：
//               4001~4010 : 在线用户控制、请求所有期货合约等；fip_const.proto；
//               4011~4014 : 用户授权鉴权、权限通知等；fip_const_cme.proto；
//               4015~4016 : 请求查询CME全部合约列表；fip_const_cme.protoc；
//               4017~4018 : 请求查询SEC全部合约列表；fip_const_cme.protoc；
//
//   real-* 实时行情服务：5000~6999，其中：
//               5000~5099 : 期货实时服务；
//               5150~5169 : OTC场外行情、基差服务；
//               5170~5169 : OTC场外仓单服务；
//               5200~5212 : 场外海港大宗；
//               5213~5222 : 场外陕储粮；
//               5223~5234 : 场外互换；
//               5235~5238 : 场外陕储粮库点请求、场外互换成交行情快照；
//               5500~5599 : 证券实时行情使用；
//               5600~5699 : 上海黄金交易所使用；
//
//   history-* 历史行情服务：7000~8999，其中：
//               7000~7009 : 期货历史服务(历史服务对外接口，查询K、分时、明细)；
//               7010~7011 : 期货历史服务内部交互协议；
//               7020~7029 : 基差/仓单成交行情列表；
//               7100~7115 : 场外仓单 海港；
//               7401~7403 : 场外实时行情统计；
//               7500~7599 : 证券历史行情使用；
//               7600~7699 : 上海黄金交易所使用；
//
//   contract mgr-* 合约管理服务：
//               9000~9999 : 国内期货、财讯通套利；
//               9500~9599 : 证券使合约管理用；
//               9600~9699 : 上海黄金交易所合约管理使用；
//
//   collector-* 采集服务：
//               10000~10999 : 期货行情采集服务使用；
//               10500~10599 : 证券采集服务使用；
//               10600~10699 : 上海黄金交易所采集服务使用；
//
//   交易相关(TProxy): 20000~30000，外盘、证券，上海黄金交易未涉及
//
// 协议号书写规则：
//   外部接口规则：OPCODE_{请求REQ，响应RSP，通知NTF}_{业务名称}_{具体业务协议名称}
//   内部接口规则：OP_{请求REQ，响应RSP，通知NTF}_{业务名称}_{模块名称}_{具体业务协议名称}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: fip_const_sec.proto

package fippb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Protocol_SEC int32

const (
	Protocol_SEC_OPSec_Begin Protocol_SEC = 0
	// ///////////////////// client-proxy 交互协议 ////////////////////////
	Protocol_SEC_OPCODE_REQ_SEC_QRY_TS_CHART        Protocol_SEC = 3501 // 请求查询证券分时数据
	Protocol_SEC_OPCODE_RSP_SEC_QRY_TS_CHART        Protocol_SEC = 3502 // 请求查询证券分时数据响应
	Protocol_SEC_OPCODE_REQ_SEC_QRY_MATCH_DETAIL    Protocol_SEC = 3503 // 请求查询证券成交明细
	Protocol_SEC_OPCODE_RSP_SEC_QRY_MATCH_DETAIL    Protocol_SEC = 3504 // 请求查询证券成交明细响应
	Protocol_SEC_OPCODE_REQ_SEC_QRY_KLINE           Protocol_SEC = 3505 // 请求查询证券k线数据
	Protocol_SEC_OPCODE_RSP_SEC_QRY_KLINE           Protocol_SEC = 3506 // 请求查询证券k线数据响应
	Protocol_SEC_OPCODE_REQ_SEC_QRY_TIME_PRICE      Protocol_SEC = 3507 // 请求查询证券分价数据
	Protocol_SEC_OPCODE_RSP_SEC_QRY_TIME_PRICE      Protocol_SEC = 3508 // 请求查询证券分价数据响应
	Protocol_SEC_OPCODE_REQ_SEC_QRY_TIME_VOLUME     Protocol_SEC = 3509 // 请求查询证券分笔数据
	Protocol_SEC_OPCODE_RSP_SEC_QRY_TIME_VOLUME     Protocol_SEC = 3510 // 请求查询证券分笔数据响应
	Protocol_SEC_OPCODE_REQ_SEC_QRY_EXCHANGE        Protocol_SEC = 3513 // 请求查询证券交易所信息
	Protocol_SEC_OPCODE_RSP_SEC_QRY_EXCHANGE        Protocol_SEC = 3514 // 请求查询证券交易所信息响应
	Protocol_SEC_OPCODE_REQ_SEC_QRY_CONTRACT        Protocol_SEC = 3515 // 请求查询证券合约信息
	Protocol_SEC_OPCODE_RSP_SEC_QRY_CONTRACT        Protocol_SEC = 3516 // 请求查询证券合约信息响应
	Protocol_SEC_OPCODE_REQ_SEC_SUB_QUOT            Protocol_SEC = 3517 // 请求订阅证券行情
	Protocol_SEC_OPCODE_RSP_SEC_SUB_QUOT            Protocol_SEC = 3518 // 请求订阅证券行情响应
	Protocol_SEC_OPCODE_NTF_SEC_QUOT                Protocol_SEC = 3519 // 推送证券行情
	Protocol_SEC_OPCODE_REQ_SEC_SUB_BRIEF_QUOT      Protocol_SEC = 3522 // 请求订阅简要行情
	Protocol_SEC_OPCODE_RSP_SEC_SUB_BRIEF_QUOT      Protocol_SEC = 3523 // 请求订阅简要行情响应
	Protocol_SEC_OPCODE_NTF_SEC_BRIEF_QUOT          Protocol_SEC = 3524 // 推送简要行情
	Protocol_SEC_OPCODE_REQ_SEC_QRY_DATA_VERSION    Protocol_SEC = 3525 // 请求查询证券静态数据版本
	Protocol_SEC_OPCODE_RSP_SEC_QRY_DATA_VERSION    Protocol_SEC = 3526 // 请求查询证券静态数据版本响应
	Protocol_SEC_OPCODE_NTF_SEC_DATA_VERSION        Protocol_SEC = 3527 // 推送证券静态数据版本变动
	Protocol_SEC_OPCODE_REQ_SEC_OPT_VARIETY_LIST    Protocol_SEC = 3530 // 查询某证券交易所期权品种列表请求
	Protocol_SEC_OPCODE_RSP_SEC_OPT_VARIETY_LIST    Protocol_SEC = 3531 // 查询某证券交易所期权品种列表响应
	Protocol_SEC_OPCODE_REQ_SEC_OPT_UNDERLYING_LIST Protocol_SEC = 3532 // 查询某证券交易所期权标的物列表请求
	Protocol_SEC_OPCODE_RSP_SEC_OPT_UNDERLYING_LIST Protocol_SEC = 3533 // 查询某证券交易所期权标的物列表响应
	Protocol_SEC_OPCODE_REQ_SEC_FUN_ENTRANCES       Protocol_SEC = 3534 // 查询某证券功能入口列表列表请求
	Protocol_SEC_OPCODE_RSP_SEC_FUN_ENTRANCES       Protocol_SEC = 3535 // 查询某证券功能入口列表列表响应
	// ///////////////////// 实时服务 交互协议 ////////////////////////
	Protocol_SEC_OP_REQ_SEC_REAL_TS_CHART        Protocol_SEC = 5501 // 请求订阅分时数据
	Protocol_SEC_OP_RSP_SEC_REAL_TS_CHART        Protocol_SEC = 5502 // 响应订阅分时数据
	Protocol_SEC_OP_NTF_SEC_REAL_TS_CHART        Protocol_SEC = 5503 // 推送分时数据
	Protocol_SEC_OP_REQ_SEC_REAL_MATCH_DETAIL    Protocol_SEC = 5504 // 请求订阅成交明细
	Protocol_SEC_OP_RSP_SEC_REAL_MATCH_DETAIL    Protocol_SEC = 5505 // 响应订阅成交明细
	Protocol_SEC_OP_NTF_SEC_REAL_MATCH_DETAIL    Protocol_SEC = 5506 // 推送成交明细
	Protocol_SEC_OP_REQ_SEC_REAL_KLINE           Protocol_SEC = 5507 // 请求订阅K线数据
	Protocol_SEC_OP_RSP_SEC_REAL_KLINE           Protocol_SEC = 5508 // 响应订阅K线数据
	Protocol_SEC_OP_NTF_SEC_REAL_KLINE           Protocol_SEC = 5509 // 推送K线数据
	Protocol_SEC_OP_REQ_SEC_REAL_QRY_TIME_PRICE  Protocol_SEC = 5510 // 请求查询证券分价数据
	Protocol_SEC_OP_RSP_SEC_REAL_QRY_TIME_PRICE  Protocol_SEC = 5511 // 请求查询证券分价数据响应
	Protocol_SEC_OP_REQ_SEC_REAL_QRY_TIME_VOLUME Protocol_SEC = 5512 // 请求查询证券分笔数据
	Protocol_SEC_OP_RSP_SEC_REAL_QRY_TIME_VOLUME Protocol_SEC = 5513 // 请求查询证券分笔数据响应
	Protocol_SEC_OP_REQ_SEC_REAL_QRY_AVG_VOLUME  Protocol_SEC = 5514 // 请求查询证券均量
	Protocol_SEC_OP_RSP_SEC_REAL_QRY_AVG_VOLUME  Protocol_SEC = 5515 // 请求查询证券均量响应
	Protocol_SEC_OP_REQ_SEC_REAL_SUB_QUOT        Protocol_SEC = 5516 // 请求订阅证券行情
	Protocol_SEC_OP_RSP_SEC_REAL_SUB_QUOT        Protocol_SEC = 5517 // 请求订阅证券行情响应
	Protocol_SEC_OP_NTF_SEC_REAL_QUOT            Protocol_SEC = 5518 // 推送证券行情
	Protocol_SEC_OP_REQ_SEC_REAL_TRADE_DATE      Protocol_SEC = 5519 // 请求交易日
	Protocol_SEC_OP_RSP_SEC_REAL_TRADE_DATE      Protocol_SEC = 5520 // 请求交易日响应
	Protocol_SEC_OP_NTF_SEC_REAL_TRADE_DATE      Protocol_SEC = 5521 // 交易日通知
	// ///////////////////// 历史服务 交互协议 ////////////////////////
	Protocol_SEC_OP_REQ_SEC_HST_QRY_TS_CHART     Protocol_SEC = 7501 // 请求查询证券分时数据
	Protocol_SEC_OP_RSP_SEC_HST_QRY_TS_CHART     Protocol_SEC = 7502 // 请求查询证券分时数据响应
	Protocol_SEC_OP_REQ_SEC_HST_QRY_MATCH_DETAIL Protocol_SEC = 7503 // 请求查询证券成交明细
	Protocol_SEC_OP_RSP_SEC_HST_QRY_MATCH_DETAIL Protocol_SEC = 7504 // 请求查询证券成交明细响应
	Protocol_SEC_OP_REQ_SEC_HST_QRY_KLINE        Protocol_SEC = 7505 // 请求查询证券k线数据
	Protocol_SEC_OP_RSP_SEC_HST_QRY_KLINE        Protocol_SEC = 7506 // 请求查询证券k线数据响应
	Protocol_SEC_OP_NTF_SEC_HST_HANDLE_RESULT    Protocol_SEC = 7551 // 历史数据写入完成通知(中继内部用)
	// ///////////////////// 采集服务 交互协议 ////////////////////////
	Protocol_SEC_OP_REQ_SEC_COL_SUB_QUOT   Protocol_SEC = 10501 // 请求订阅证券行情
	Protocol_SEC_OP_RSP_SEC_COL_SUB_QUOT   Protocol_SEC = 10502 // 请求订阅证券行情响应
	Protocol_SEC_OP_NTF_SEC_COL_QUOT       Protocol_SEC = 10503 // 推送证券行情
	Protocol_SEC_OP_REQ_SEC_COL_UNSUB_QUOT Protocol_SEC = 10504 // 请求取消订阅证券行情
	Protocol_SEC_OP_RSP_SEC_COL_UNSUB_QUOT Protocol_SEC = 10505 // 请求取消订阅证券行情响应
	// ///////////////////// 合约管理 交互协议 ////////////////////////
	Protocol_SEC_OP_REQ_SEC_MGR_QRY_EXCHANGE          Protocol_SEC = 9501 // 请求查询证券交易所信息
	Protocol_SEC_OP_RSP_SEC_MGR_QRY_EXCHANGE          Protocol_SEC = 9502 // 请求查询证券交易所信息响应
	Protocol_SEC_OP_REQ_SEC_MGR_QRY_CONTRACT          Protocol_SEC = 9503 // 请求查询证券合约信息
	Protocol_SEC_OP_RSP_SEC_MGR_QRY_CONTRACT          Protocol_SEC = 9504 // 请求查询证券合约信息响应
	Protocol_SEC_OP_NTF_SEC_MGR_CONTRACT              Protocol_SEC = 9505 // 推送证券合约信息更新
	Protocol_SEC_OP_REQ_SEC_MGR_QRY_DATA_VERSION      Protocol_SEC = 9506 // 请求查询证券静态数据版本
	Protocol_SEC_OP_RSP_SEC_MGR_QRY_DATA_VERSION      Protocol_SEC = 9507 // 请求查询证券静态数据版本响应
	Protocol_SEC_OP_NTF_SEC_MGR_DATA_VERSION          Protocol_SEC = 9508 // 证券静态数据版本变动通知
	Protocol_SEC_OP_REQ_SEC_MGR_OPEN_CLOSE            Protocol_SEC = 9509 // 请求订阅交易所开盘收盘信息
	Protocol_SEC_OP_RSP_SEC_MGR_OPEN_CLOSE            Protocol_SEC = 9510 // 请求订阅交易所开盘收盘信息响应
	Protocol_SEC_OP_NTF_SEC_MGR_OPEN_CLOSE            Protocol_SEC = 9511 // 推送交易所开盘收盘信息通知
	Protocol_SEC_OP_REQ_SEC_MGR_QRY_OPT_VARIETY       Protocol_SEC = 9512 // 请求查询证券期权品种信息
	Protocol_SEC_OP_RSP_SEC_MGR_QRY_OPT_VARIETY       Protocol_SEC = 9513 // 查询证券期权品种信息响应
	Protocol_SEC_OP_REQ_SEC_MGR_QRY_OPT_UNDERLYING    Protocol_SEC = 9514 // 查询证券期权标的物信息请求
	Protocol_SEC_OP_RSP_SEC_MGR_QRY_OPT_UNDERLYING    Protocol_SEC = 9515 // 查询证券期权品种标的物信息响应
	Protocol_SEC_OP_REQ_SEC_MGR_QRY_INTERNAL_CONTRACT Protocol_SEC = 9516 // 请求查询证券内部合约信息(中继内部用)
	Protocol_SEC_OP_RSP_SEC_MGR_QRY_INTERNAL_CONTRACT Protocol_SEC = 9517 // 请求查询证券内部合约信息响应(中继内部用)
	Protocol_SEC_OP_REQ_SEC_MGR_SUB_BJ_CONTRACT       Protocol_SEC = 9518 // 请求订阅证券北交所合约列表(中继内部用)
	Protocol_SEC_OP_RSP_SEC_MGR_SUB_BJ_CONTRACT       Protocol_SEC = 9519 // 请求订阅证券北交所合约列表响应(中继内部用)
	Protocol_SEC_OP_NTF_SEC_MGR_BJ_CONTRACT           Protocol_SEC = 9520 // 推送证券北交所合约列表(中继内部用)
	// ///////////////////// 中继内部 交互协议 ////////////////////////
	Protocol_SEC_OP_REQ_SEC_SERVICE_STATUS Protocol_SEC = 9551 // 请求服务状态(中继内部用)
	Protocol_SEC_OP_RSP_SEC_SERVICE_STATUS Protocol_SEC = 9552 // 请求服务状态响应(中继内部用)
	Protocol_SEC_OP_NTF_SEC_SERVICE_STATUS Protocol_SEC = 9553 // 推送服务状态(中继内部用)
	// ///////////////////// User-Proxy 交互协议 ////////////////////////
	Protocol_SEC_OP_REQ_SEC_CONTRACT_ALL Protocol_SEC = 4017 // req all SEC contract
	Protocol_SEC_OP_RSP_SEC_CONTRACT_ALL Protocol_SEC = 4018 // rsp all SEC contract
)

// Enum value maps for Protocol_SEC.
var (
	Protocol_SEC_name = map[int32]string{
		0:     "OPSec_Begin",
		3501:  "OPCODE_REQ_SEC_QRY_TS_CHART",
		3502:  "OPCODE_RSP_SEC_QRY_TS_CHART",
		3503:  "OPCODE_REQ_SEC_QRY_MATCH_DETAIL",
		3504:  "OPCODE_RSP_SEC_QRY_MATCH_DETAIL",
		3505:  "OPCODE_REQ_SEC_QRY_KLINE",
		3506:  "OPCODE_RSP_SEC_QRY_KLINE",
		3507:  "OPCODE_REQ_SEC_QRY_TIME_PRICE",
		3508:  "OPCODE_RSP_SEC_QRY_TIME_PRICE",
		3509:  "OPCODE_REQ_SEC_QRY_TIME_VOLUME",
		3510:  "OPCODE_RSP_SEC_QRY_TIME_VOLUME",
		3513:  "OPCODE_REQ_SEC_QRY_EXCHANGE",
		3514:  "OPCODE_RSP_SEC_QRY_EXCHANGE",
		3515:  "OPCODE_REQ_SEC_QRY_CONTRACT",
		3516:  "OPCODE_RSP_SEC_QRY_CONTRACT",
		3517:  "OPCODE_REQ_SEC_SUB_QUOT",
		3518:  "OPCODE_RSP_SEC_SUB_QUOT",
		3519:  "OPCODE_NTF_SEC_QUOT",
		3522:  "OPCODE_REQ_SEC_SUB_BRIEF_QUOT",
		3523:  "OPCODE_RSP_SEC_SUB_BRIEF_QUOT",
		3524:  "OPCODE_NTF_SEC_BRIEF_QUOT",
		3525:  "OPCODE_REQ_SEC_QRY_DATA_VERSION",
		3526:  "OPCODE_RSP_SEC_QRY_DATA_VERSION",
		3527:  "OPCODE_NTF_SEC_DATA_VERSION",
		3530:  "OPCODE_REQ_SEC_OPT_VARIETY_LIST",
		3531:  "OPCODE_RSP_SEC_OPT_VARIETY_LIST",
		3532:  "OPCODE_REQ_SEC_OPT_UNDERLYING_LIST",
		3533:  "OPCODE_RSP_SEC_OPT_UNDERLYING_LIST",
		3534:  "OPCODE_REQ_SEC_FUN_ENTRANCES",
		3535:  "OPCODE_RSP_SEC_FUN_ENTRANCES",
		5501:  "OP_REQ_SEC_REAL_TS_CHART",
		5502:  "OP_RSP_SEC_REAL_TS_CHART",
		5503:  "OP_NTF_SEC_REAL_TS_CHART",
		5504:  "OP_REQ_SEC_REAL_MATCH_DETAIL",
		5505:  "OP_RSP_SEC_REAL_MATCH_DETAIL",
		5506:  "OP_NTF_SEC_REAL_MATCH_DETAIL",
		5507:  "OP_REQ_SEC_REAL_KLINE",
		5508:  "OP_RSP_SEC_REAL_KLINE",
		5509:  "OP_NTF_SEC_REAL_KLINE",
		5510:  "OP_REQ_SEC_REAL_QRY_TIME_PRICE",
		5511:  "OP_RSP_SEC_REAL_QRY_TIME_PRICE",
		5512:  "OP_REQ_SEC_REAL_QRY_TIME_VOLUME",
		5513:  "OP_RSP_SEC_REAL_QRY_TIME_VOLUME",
		5514:  "OP_REQ_SEC_REAL_QRY_AVG_VOLUME",
		5515:  "OP_RSP_SEC_REAL_QRY_AVG_VOLUME",
		5516:  "OP_REQ_SEC_REAL_SUB_QUOT",
		5517:  "OP_RSP_SEC_REAL_SUB_QUOT",
		5518:  "OP_NTF_SEC_REAL_QUOT",
		5519:  "OP_REQ_SEC_REAL_TRADE_DATE",
		5520:  "OP_RSP_SEC_REAL_TRADE_DATE",
		5521:  "OP_NTF_SEC_REAL_TRADE_DATE",
		7501:  "OP_REQ_SEC_HST_QRY_TS_CHART",
		7502:  "OP_RSP_SEC_HST_QRY_TS_CHART",
		7503:  "OP_REQ_SEC_HST_QRY_MATCH_DETAIL",
		7504:  "OP_RSP_SEC_HST_QRY_MATCH_DETAIL",
		7505:  "OP_REQ_SEC_HST_QRY_KLINE",
		7506:  "OP_RSP_SEC_HST_QRY_KLINE",
		7551:  "OP_NTF_SEC_HST_HANDLE_RESULT",
		10501: "OP_REQ_SEC_COL_SUB_QUOT",
		10502: "OP_RSP_SEC_COL_SUB_QUOT",
		10503: "OP_NTF_SEC_COL_QUOT",
		10504: "OP_REQ_SEC_COL_UNSUB_QUOT",
		10505: "OP_RSP_SEC_COL_UNSUB_QUOT",
		9501:  "OP_REQ_SEC_MGR_QRY_EXCHANGE",
		9502:  "OP_RSP_SEC_MGR_QRY_EXCHANGE",
		9503:  "OP_REQ_SEC_MGR_QRY_CONTRACT",
		9504:  "OP_RSP_SEC_MGR_QRY_CONTRACT",
		9505:  "OP_NTF_SEC_MGR_CONTRACT",
		9506:  "OP_REQ_SEC_MGR_QRY_DATA_VERSION",
		9507:  "OP_RSP_SEC_MGR_QRY_DATA_VERSION",
		9508:  "OP_NTF_SEC_MGR_DATA_VERSION",
		9509:  "OP_REQ_SEC_MGR_OPEN_CLOSE",
		9510:  "OP_RSP_SEC_MGR_OPEN_CLOSE",
		9511:  "OP_NTF_SEC_MGR_OPEN_CLOSE",
		9512:  "OP_REQ_SEC_MGR_QRY_OPT_VARIETY",
		9513:  "OP_RSP_SEC_MGR_QRY_OPT_VARIETY",
		9514:  "OP_REQ_SEC_MGR_QRY_OPT_UNDERLYING",
		9515:  "OP_RSP_SEC_MGR_QRY_OPT_UNDERLYING",
		9516:  "OP_REQ_SEC_MGR_QRY_INTERNAL_CONTRACT",
		9517:  "OP_RSP_SEC_MGR_QRY_INTERNAL_CONTRACT",
		9518:  "OP_REQ_SEC_MGR_SUB_BJ_CONTRACT",
		9519:  "OP_RSP_SEC_MGR_SUB_BJ_CONTRACT",
		9520:  "OP_NTF_SEC_MGR_BJ_CONTRACT",
		9551:  "OP_REQ_SEC_SERVICE_STATUS",
		9552:  "OP_RSP_SEC_SERVICE_STATUS",
		9553:  "OP_NTF_SEC_SERVICE_STATUS",
		4017:  "OP_REQ_SEC_CONTRACT_ALL",
		4018:  "OP_RSP_SEC_CONTRACT_ALL",
	}
	Protocol_SEC_value = map[string]int32{
		"OPSec_Begin":                          0,
		"OPCODE_REQ_SEC_QRY_TS_CHART":          3501,
		"OPCODE_RSP_SEC_QRY_TS_CHART":          3502,
		"OPCODE_REQ_SEC_QRY_MATCH_DETAIL":      3503,
		"OPCODE_RSP_SEC_QRY_MATCH_DETAIL":      3504,
		"OPCODE_REQ_SEC_QRY_KLINE":             3505,
		"OPCODE_RSP_SEC_QRY_KLINE":             3506,
		"OPCODE_REQ_SEC_QRY_TIME_PRICE":        3507,
		"OPCODE_RSP_SEC_QRY_TIME_PRICE":        3508,
		"OPCODE_REQ_SEC_QRY_TIME_VOLUME":       3509,
		"OPCODE_RSP_SEC_QRY_TIME_VOLUME":       3510,
		"OPCODE_REQ_SEC_QRY_EXCHANGE":          3513,
		"OPCODE_RSP_SEC_QRY_EXCHANGE":          3514,
		"OPCODE_REQ_SEC_QRY_CONTRACT":          3515,
		"OPCODE_RSP_SEC_QRY_CONTRACT":          3516,
		"OPCODE_REQ_SEC_SUB_QUOT":              3517,
		"OPCODE_RSP_SEC_SUB_QUOT":              3518,
		"OPCODE_NTF_SEC_QUOT":                  3519,
		"OPCODE_REQ_SEC_SUB_BRIEF_QUOT":        3522,
		"OPCODE_RSP_SEC_SUB_BRIEF_QUOT":        3523,
		"OPCODE_NTF_SEC_BRIEF_QUOT":            3524,
		"OPCODE_REQ_SEC_QRY_DATA_VERSION":      3525,
		"OPCODE_RSP_SEC_QRY_DATA_VERSION":      3526,
		"OPCODE_NTF_SEC_DATA_VERSION":          3527,
		"OPCODE_REQ_SEC_OPT_VARIETY_LIST":      3530,
		"OPCODE_RSP_SEC_OPT_VARIETY_LIST":      3531,
		"OPCODE_REQ_SEC_OPT_UNDERLYING_LIST":   3532,
		"OPCODE_RSP_SEC_OPT_UNDERLYING_LIST":   3533,
		"OPCODE_REQ_SEC_FUN_ENTRANCES":         3534,
		"OPCODE_RSP_SEC_FUN_ENTRANCES":         3535,
		"OP_REQ_SEC_REAL_TS_CHART":             5501,
		"OP_RSP_SEC_REAL_TS_CHART":             5502,
		"OP_NTF_SEC_REAL_TS_CHART":             5503,
		"OP_REQ_SEC_REAL_MATCH_DETAIL":         5504,
		"OP_RSP_SEC_REAL_MATCH_DETAIL":         5505,
		"OP_NTF_SEC_REAL_MATCH_DETAIL":         5506,
		"OP_REQ_SEC_REAL_KLINE":                5507,
		"OP_RSP_SEC_REAL_KLINE":                5508,
		"OP_NTF_SEC_REAL_KLINE":                5509,
		"OP_REQ_SEC_REAL_QRY_TIME_PRICE":       5510,
		"OP_RSP_SEC_REAL_QRY_TIME_PRICE":       5511,
		"OP_REQ_SEC_REAL_QRY_TIME_VOLUME":      5512,
		"OP_RSP_SEC_REAL_QRY_TIME_VOLUME":      5513,
		"OP_REQ_SEC_REAL_QRY_AVG_VOLUME":       5514,
		"OP_RSP_SEC_REAL_QRY_AVG_VOLUME":       5515,
		"OP_REQ_SEC_REAL_SUB_QUOT":             5516,
		"OP_RSP_SEC_REAL_SUB_QUOT":             5517,
		"OP_NTF_SEC_REAL_QUOT":                 5518,
		"OP_REQ_SEC_REAL_TRADE_DATE":           5519,
		"OP_RSP_SEC_REAL_TRADE_DATE":           5520,
		"OP_NTF_SEC_REAL_TRADE_DATE":           5521,
		"OP_REQ_SEC_HST_QRY_TS_CHART":          7501,
		"OP_RSP_SEC_HST_QRY_TS_CHART":          7502,
		"OP_REQ_SEC_HST_QRY_MATCH_DETAIL":      7503,
		"OP_RSP_SEC_HST_QRY_MATCH_DETAIL":      7504,
		"OP_REQ_SEC_HST_QRY_KLINE":             7505,
		"OP_RSP_SEC_HST_QRY_KLINE":             7506,
		"OP_NTF_SEC_HST_HANDLE_RESULT":         7551,
		"OP_REQ_SEC_COL_SUB_QUOT":              10501,
		"OP_RSP_SEC_COL_SUB_QUOT":              10502,
		"OP_NTF_SEC_COL_QUOT":                  10503,
		"OP_REQ_SEC_COL_UNSUB_QUOT":            10504,
		"OP_RSP_SEC_COL_UNSUB_QUOT":            10505,
		"OP_REQ_SEC_MGR_QRY_EXCHANGE":          9501,
		"OP_RSP_SEC_MGR_QRY_EXCHANGE":          9502,
		"OP_REQ_SEC_MGR_QRY_CONTRACT":          9503,
		"OP_RSP_SEC_MGR_QRY_CONTRACT":          9504,
		"OP_NTF_SEC_MGR_CONTRACT":              9505,
		"OP_REQ_SEC_MGR_QRY_DATA_VERSION":      9506,
		"OP_RSP_SEC_MGR_QRY_DATA_VERSION":      9507,
		"OP_NTF_SEC_MGR_DATA_VERSION":          9508,
		"OP_REQ_SEC_MGR_OPEN_CLOSE":            9509,
		"OP_RSP_SEC_MGR_OPEN_CLOSE":            9510,
		"OP_NTF_SEC_MGR_OPEN_CLOSE":            9511,
		"OP_REQ_SEC_MGR_QRY_OPT_VARIETY":       9512,
		"OP_RSP_SEC_MGR_QRY_OPT_VARIETY":       9513,
		"OP_REQ_SEC_MGR_QRY_OPT_UNDERLYING":    9514,
		"OP_RSP_SEC_MGR_QRY_OPT_UNDERLYING":    9515,
		"OP_REQ_SEC_MGR_QRY_INTERNAL_CONTRACT": 9516,
		"OP_RSP_SEC_MGR_QRY_INTERNAL_CONTRACT": 9517,
		"OP_REQ_SEC_MGR_SUB_BJ_CONTRACT":       9518,
		"OP_RSP_SEC_MGR_SUB_BJ_CONTRACT":       9519,
		"OP_NTF_SEC_MGR_BJ_CONTRACT":           9520,
		"OP_REQ_SEC_SERVICE_STATUS":            9551,
		"OP_RSP_SEC_SERVICE_STATUS":            9552,
		"OP_NTF_SEC_SERVICE_STATUS":            9553,
		"OP_REQ_SEC_CONTRACT_ALL":              4017,
		"OP_RSP_SEC_CONTRACT_ALL":              4018,
	}
)

func (x Protocol_SEC) Enum() *Protocol_SEC {
	p := new(Protocol_SEC)
	*p = x
	return p
}

func (x Protocol_SEC) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol_SEC) Descriptor() protoreflect.EnumDescriptor {
	return file_fip_const_sec_proto_enumTypes[0].Descriptor()
}

func (Protocol_SEC) Type() protoreflect.EnumType {
	return &file_fip_const_sec_proto_enumTypes[0]
}

func (x Protocol_SEC) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol_SEC.Descriptor instead.
func (Protocol_SEC) EnumDescriptor() ([]byte, []int) {
	return file_fip_const_sec_proto_rawDescGZIP(), []int{0}
}

var File_fip_const_sec_proto protoreflect.FileDescriptor

var file_fip_const_sec_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2a, 0xbf, 0x17, 0x0a,
	0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x53, 0x45, 0x43, 0x12, 0x0f, 0x0a,
	0x0b, 0x4f, 0x50, 0x53, 0x65, 0x63, 0x5f, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x20,
	0x0a, 0x1b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43,
	0x5f, 0x51, 0x52, 0x59, 0x5f, 0x54, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x54, 0x10, 0xad, 0x1b,
	0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53,
	0x45, 0x43, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x54, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x54, 0x10,
	0xae, 0x1b, 0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51,
	0x5f, 0x53, 0x45, 0x43, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x44,
	0x45, 0x54, 0x41, 0x49, 0x4c, 0x10, 0xaf, 0x1b, 0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x4d,
	0x41, 0x54, 0x43, 0x48, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x10, 0xb0, 0x1b, 0x12, 0x1d,
	0x0a, 0x18, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43,
	0x5f, 0x51, 0x52, 0x59, 0x5f, 0x4b, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0xb1, 0x1b, 0x12, 0x1d, 0x0a,
	0x18, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f,
	0x51, 0x52, 0x59, 0x5f, 0x4b, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0xb2, 0x1b, 0x12, 0x22, 0x0a, 0x1d,
	0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x51,
	0x52, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0xb3, 0x1b,
	0x12, 0x22, 0x0a, 0x1d, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53,
	0x45, 0x43, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x43,
	0x45, 0x10, 0xb4, 0x1b, 0x12, 0x23, 0x0a, 0x1e, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52,
	0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0xb5, 0x1b, 0x12, 0x23, 0x0a, 0x1e, 0x4f, 0x50, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x51, 0x52, 0x59, 0x5f,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0xb6, 0x1b, 0x12, 0x20,
	0x0a, 0x1b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43,
	0x5f, 0x51, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0xb9, 0x1b,
	0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53,
	0x45, 0x43, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10,
	0xba, 0x1b, 0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51,
	0x5f, 0x53, 0x45, 0x43, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43,
	0x54, 0x10, 0xbb, 0x1b, 0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52,
	0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52,
	0x41, 0x43, 0x54, 0x10, 0xbc, 0x1b, 0x12, 0x1c, 0x0a, 0x17, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x51, 0x55, 0x4f,
	0x54, 0x10, 0xbd, 0x1b, 0x12, 0x1c, 0x0a, 0x17, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52,
	0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x10,
	0xbe, 0x1b, 0x12, 0x18, 0x0a, 0x13, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x54, 0x46,
	0x5f, 0x53, 0x45, 0x43, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x10, 0xbf, 0x1b, 0x12, 0x22, 0x0a, 0x1d,
	0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x53,
	0x55, 0x42, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x10, 0xc2, 0x1b,
	0x12, 0x22, 0x0a, 0x1d, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53,
	0x45, 0x43, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x51, 0x55, 0x4f,
	0x54, 0x10, 0xc3, 0x1b, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e,
	0x54, 0x46, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x42, 0x52, 0x49, 0x45, 0x46, 0x5f, 0x51, 0x55, 0x4f,
	0x54, 0x10, 0xc4, 0x1b, 0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52,
	0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0xc5, 0x1b, 0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x51, 0x52, 0x59,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0xc6, 0x1b,
	0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x53,
	0x45, 0x43, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0xc7, 0x1b, 0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51,
	0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x45, 0x54, 0x59,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xca, 0x1b, 0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x56,
	0x41, 0x52, 0x49, 0x45, 0x54, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xcb, 0x1b, 0x12, 0x27,
	0x0a, 0x22, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43,
	0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x4c, 0x59, 0x49, 0x4e, 0x47, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x10, 0xcc, 0x1b, 0x12, 0x27, 0x0a, 0x22, 0x4f, 0x50, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x52, 0x4c, 0x59, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0xcd, 0x1b,
	0x12, 0x21, 0x0a, 0x1c, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53,
	0x45, 0x43, 0x5f, 0x46, 0x55, 0x4e, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x53,
	0x10, 0xce, 0x1b, 0x12, 0x21, 0x0a, 0x1c, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x53,
	0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x46, 0x55, 0x4e, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x41, 0x4e,
	0x43, 0x45, 0x53, 0x10, 0xcf, 0x1b, 0x12, 0x1d, 0x0a, 0x18, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51,
	0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x54, 0x53, 0x5f, 0x43, 0x48, 0x41,
	0x52, 0x54, 0x10, 0xfd, 0x2a, 0x12, 0x1d, 0x0a, 0x18, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f,
	0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x54, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x52,
	0x54, 0x10, 0xfe, 0x2a, 0x12, 0x1d, 0x0a, 0x18, 0x4f, 0x50, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x53,
	0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x54, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x54,
	0x10, 0xff, 0x2a, 0x12, 0x21, 0x0a, 0x1c, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45,
	0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x44, 0x45, 0x54,
	0x41, 0x49, 0x4c, 0x10, 0x80, 0x2b, 0x12, 0x21, 0x0a, 0x1c, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50,
	0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f,
	0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x10, 0x81, 0x2b, 0x12, 0x21, 0x0a, 0x1c, 0x4f, 0x50, 0x5f,
	0x4e, 0x54, 0x46, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x10, 0x82, 0x2b, 0x12, 0x1a, 0x0a, 0x15,
	0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f,
	0x4b, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x83, 0x2b, 0x12, 0x1a, 0x0a, 0x15, 0x4f, 0x50, 0x5f, 0x52,
	0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x4b, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x84, 0x2b, 0x12, 0x1a, 0x0a, 0x15, 0x4f, 0x50, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x53,
	0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x4b, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x85, 0x2b,
	0x12, 0x23, 0x0a, 0x1e, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52,
	0x45, 0x41, 0x4c, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x50, 0x52, 0x49,
	0x43, 0x45, 0x10, 0x86, 0x2b, 0x12, 0x23, 0x0a, 0x1e, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f,
	0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x87, 0x2b, 0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50,
	0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x51, 0x52,
	0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x88, 0x2b,
	0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52,
	0x45, 0x41, 0x4c, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x56, 0x4f, 0x4c,
	0x55, 0x4d, 0x45, 0x10, 0x89, 0x2b, 0x12, 0x23, 0x0a, 0x1e, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51,
	0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x41, 0x56,
	0x47, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x8a, 0x2b, 0x12, 0x23, 0x0a, 0x1e, 0x4f,
	0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x51,
	0x52, 0x59, 0x5f, 0x41, 0x56, 0x47, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x8b, 0x2b,
	0x12, 0x1d, 0x0a, 0x18, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52,
	0x45, 0x41, 0x4c, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x10, 0x8c, 0x2b, 0x12,
	0x1d, 0x0a, 0x18, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45,
	0x41, 0x4c, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x10, 0x8d, 0x2b, 0x12, 0x19,
	0x0a, 0x14, 0x4f, 0x50, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41,
	0x4c, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x10, 0x8e, 0x2b, 0x12, 0x1f, 0x0a, 0x1a, 0x4f, 0x50, 0x5f,
	0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x54, 0x52, 0x41,
	0x44, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x8f, 0x2b, 0x12, 0x1f, 0x0a, 0x1a, 0x4f, 0x50,
	0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x54, 0x52,
	0x41, 0x44, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x90, 0x2b, 0x12, 0x1f, 0x0a, 0x1a, 0x4f,
	0x50, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x54,
	0x52, 0x41, 0x44, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x91, 0x2b, 0x12, 0x20, 0x0a, 0x1b,
	0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x48, 0x53, 0x54, 0x5f, 0x51,
	0x52, 0x59, 0x5f, 0x54, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x54, 0x10, 0xcd, 0x3a, 0x12, 0x20,
	0x0a, 0x1b, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x48, 0x53, 0x54,
	0x5f, 0x51, 0x52, 0x59, 0x5f, 0x54, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x54, 0x10, 0xce, 0x3a,
	0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x48,
	0x53, 0x54, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x44, 0x45, 0x54,
	0x41, 0x49, 0x4c, 0x10, 0xcf, 0x3a, 0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50,
	0x5f, 0x53, 0x45, 0x43, 0x5f, 0x48, 0x53, 0x54, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x4d, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x10, 0xd0, 0x3a, 0x12, 0x1d, 0x0a, 0x18,
	0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x48, 0x53, 0x54, 0x5f, 0x51,
	0x52, 0x59, 0x5f, 0x4b, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0xd1, 0x3a, 0x12, 0x1d, 0x0a, 0x18, 0x4f,
	0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x48, 0x53, 0x54, 0x5f, 0x51, 0x52,
	0x59, 0x5f, 0x4b, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0xd2, 0x3a, 0x12, 0x21, 0x0a, 0x1c, 0x4f, 0x50,
	0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x48, 0x53, 0x54, 0x5f, 0x48, 0x41, 0x4e,
	0x44, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0xff, 0x3a, 0x12, 0x1c, 0x0a,
	0x17, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x43, 0x4f, 0x4c, 0x5f,
	0x53, 0x55, 0x42, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x10, 0x85, 0x52, 0x12, 0x1c, 0x0a, 0x17, 0x4f,
	0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x43, 0x4f, 0x4c, 0x5f, 0x53, 0x55,
	0x42, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x10, 0x86, 0x52, 0x12, 0x18, 0x0a, 0x13, 0x4f, 0x50, 0x5f,
	0x4e, 0x54, 0x46, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x43, 0x4f, 0x4c, 0x5f, 0x51, 0x55, 0x4f, 0x54,
	0x10, 0x87, 0x52, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45,
	0x43, 0x5f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x5f, 0x51, 0x55, 0x4f, 0x54,
	0x10, 0x88, 0x52, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45,
	0x43, 0x5f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x5f, 0x51, 0x55, 0x4f, 0x54,
	0x10, 0x89, 0x52, 0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45,
	0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x10, 0x9d, 0x4a, 0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f,
	0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x10, 0x9e, 0x4a, 0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x9f, 0x4a, 0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x5f,
	0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x51, 0x52, 0x59, 0x5f,
	0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0xa0, 0x4a, 0x12, 0x1c, 0x0a, 0x17, 0x4f,
	0x50, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0xa1, 0x4a, 0x12, 0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x5f,
	0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x51, 0x52, 0x59, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0xa2, 0x4a, 0x12,
	0x24, 0x0a, 0x1f, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47,
	0x52, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49,
	0x4f, 0x4e, 0x10, 0xa3, 0x4a, 0x12, 0x20, 0x0a, 0x1b, 0x4f, 0x50, 0x5f, 0x4e, 0x54, 0x46, 0x5f,
	0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x45, 0x52,
	0x53, 0x49, 0x4f, 0x4e, 0x10, 0xa4, 0x4a, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x43,
	0x4c, 0x4f, 0x53, 0x45, 0x10, 0xa5, 0x4a, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x5f, 0x52, 0x53,
	0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x43,
	0x4c, 0x4f, 0x53, 0x45, 0x10, 0xa6, 0x4a, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x5f, 0x4e, 0x54,
	0x46, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x43,
	0x4c, 0x4f, 0x53, 0x45, 0x10, 0xa7, 0x4a, 0x12, 0x23, 0x0a, 0x1e, 0x4f, 0x50, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x4f, 0x50,
	0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x45, 0x54, 0x59, 0x10, 0xa8, 0x4a, 0x12, 0x23, 0x0a, 0x1e,
	0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x51,
	0x52, 0x59, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x45, 0x54, 0x59, 0x10, 0xa9,
	0x4a, 0x12, 0x26, 0x0a, 0x21, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f,
	0x4d, 0x47, 0x52, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x4f, 0x50, 0x54, 0x5f, 0x55, 0x4e, 0x44, 0x45,
	0x52, 0x4c, 0x59, 0x49, 0x4e, 0x47, 0x10, 0xaa, 0x4a, 0x12, 0x26, 0x0a, 0x21, 0x4f, 0x50, 0x5f,
	0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x51, 0x52, 0x59, 0x5f,
	0x4f, 0x50, 0x54, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x4c, 0x59, 0x49, 0x4e, 0x47, 0x10, 0xab,
	0x4a, 0x12, 0x29, 0x0a, 0x24, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f,
	0x4d, 0x47, 0x52, 0x5f, 0x51, 0x52, 0x59, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0xac, 0x4a, 0x12, 0x29, 0x0a, 0x24,
	0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x51,
	0x52, 0x59, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x54,
	0x52, 0x41, 0x43, 0x54, 0x10, 0xad, 0x4a, 0x12, 0x23, 0x0a, 0x1e, 0x4f, 0x50, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x42, 0x4a,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0xae, 0x4a, 0x12, 0x23, 0x0a, 0x1e,
	0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x4d, 0x47, 0x52, 0x5f, 0x53,
	0x55, 0x42, 0x5f, 0x42, 0x4a, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0xaf,
	0x4a, 0x12, 0x1f, 0x0a, 0x1a, 0x4f, 0x50, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x53, 0x45, 0x43, 0x5f,
	0x4d, 0x47, 0x52, 0x5f, 0x42, 0x4a, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10,
	0xb0, 0x4a, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10,
	0xcf, 0x4a, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10,
	0xd0, 0x4a, 0x12, 0x1e, 0x0a, 0x19, 0x4f, 0x50, 0x5f, 0x4e, 0x54, 0x46, 0x5f, 0x53, 0x45, 0x43,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10,
	0xd1, 0x4a, 0x12, 0x1c, 0x0a, 0x17, 0x4f, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x53, 0x45, 0x43,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0xb1, 0x1f,
	0x12, 0x1c, 0x0a, 0x17, 0x4f, 0x50, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x53, 0x45, 0x43, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0xb2, 0x1f, 0x42, 0x1b,
	0x5a, 0x19, 0x66, 0x69, 0x70, 0x64, 0x65, 0x76, 0x2e, 0x64, 0x66, 0x69, 0x74, 0x63, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6e, 0x2f, 0x66, 0x69, 0x70, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_fip_const_sec_proto_rawDescOnce sync.Once
	file_fip_const_sec_proto_rawDescData = file_fip_const_sec_proto_rawDesc
)

func file_fip_const_sec_proto_rawDescGZIP() []byte {
	file_fip_const_sec_proto_rawDescOnce.Do(func() {
		file_fip_const_sec_proto_rawDescData = protoimpl.X.CompressGZIP(file_fip_const_sec_proto_rawDescData)
	})
	return file_fip_const_sec_proto_rawDescData
}

var file_fip_const_sec_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fip_const_sec_proto_goTypes = []interface{}{
	(Protocol_SEC)(0), // 0: fippb.Protocol_SEC
}
var file_fip_const_sec_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fip_const_sec_proto_init() }
func file_fip_const_sec_proto_init() {
	if File_fip_const_sec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fip_const_sec_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fip_const_sec_proto_goTypes,
		DependencyIndexes: file_fip_const_sec_proto_depIdxs,
		EnumInfos:         file_fip_const_sec_proto_enumTypes,
	}.Build()
	File_fip_const_sec_proto = out.File
	file_fip_const_sec_proto_rawDesc = nil
	file_fip_const_sec_proto_goTypes = nil
	file_fip_const_sec_proto_depIdxs = nil
}
