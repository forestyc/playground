//*
// Copyright (C) 2015-2016，大连商品交易所 大连飞创信息技术有限公司
//
// @file
// @brief CME行情接口proto定义
//
// @author <mengxib>
//
// @date 2021-11-10
// @note 组内评审专家：todo
// @note 组外评审专家：todo
// @note
// @modify

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: fip_interface_cme.proto

package fippb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通知类型
type ENotfiyType int32

const (
	ENotfiyType_Notfiy_Base       ENotfiyType = 0 // 未知
	ENotfiyType_Notfiy_CMEAuthChg ENotfiyType = 1 // CME授权变更
	ENotfiyType_Notfiy_CMEDevChg  ENotfiyType = 2 // CME设备变更
	ENotfiyType_Notfiy_L2AuthChg  ENotfiyType = 3 // L2授权变更
	ENotfiyType_Notfiy_DAAuthChg  ENotfiyType = 4 // 直达授权变更
	ENotfiyType_Notfiy_Offline    ENotfiyType = 5 // 下线通知
)

// Enum value maps for ENotfiyType.
var (
	ENotfiyType_name = map[int32]string{
		0: "Notfiy_Base",
		1: "Notfiy_CMEAuthChg",
		2: "Notfiy_CMEDevChg",
		3: "Notfiy_L2AuthChg",
		4: "Notfiy_DAAuthChg",
		5: "Notfiy_Offline",
	}
	ENotfiyType_value = map[string]int32{
		"Notfiy_Base":       0,
		"Notfiy_CMEAuthChg": 1,
		"Notfiy_CMEDevChg":  2,
		"Notfiy_L2AuthChg":  3,
		"Notfiy_DAAuthChg":  4,
		"Notfiy_Offline":    5,
	}
)

func (x ENotfiyType) Enum() *ENotfiyType {
	p := new(ENotfiyType)
	*p = x
	return p
}

func (x ENotfiyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ENotfiyType) Descriptor() protoreflect.EnumDescriptor {
	return file_fip_interface_cme_proto_enumTypes[0].Descriptor()
}

func (ENotfiyType) Type() protoreflect.EnumType {
	return &file_fip_interface_cme_proto_enumTypes[0]
}

func (x ENotfiyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ENotfiyType.Descriptor instead.
func (ENotfiyType) EnumDescriptor() ([]byte, []int) {
	return file_fip_interface_cme_proto_rawDescGZIP(), []int{0}
}

// *
// @brief Proxy->cliend 推送通知 （点对点通知，或群发）
// @date 2021-10-13
// @note 协议号    OPCODE_SEND_NOTIFICATION_TO_CLIENT  3670
type NotifyToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotifyType       ENotfiyType    `protobuf:"varint,1,opt,name=NotifyType,proto3,enum=fippb.ENotfiyType" json:"NotifyType,omitempty"` //通知类别
	ExchgAuthResults []*AuthResult  `protobuf:"bytes,2,rep,name=ExchgAuthResults,proto3" json:"ExchgAuthResults,omitempty"`             //权限信息 Notfiy_CMEAuthChg有意义
	NewDeviceNo      string         `protobuf:"bytes,3,opt,name=NewDeviceNo,proto3" json:"NewDeviceNo,omitempty"`                       //当前设备（新绑定CNE授权的设备） Notfiy_CMEDevChg时有意义,分交易所权限应答
	OldDeviceNo      string         `protobuf:"bytes,4,opt,name=OldDeviceNo,proto3" json:"OldDeviceNo,omitempty"`                       //旧设备（之前被绑定的设备，需要下线的） Notfiy_CMEDevChg时有意义
	Message          string         `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`                               //通知文本内容
	UserId           string         `protobuf:"bytes,6,opt,name=UserId,proto3" json:"UserId,omitempty"`                                 //用户ID
	Reserved1        uint32         `protobuf:"varint,7,opt,name=reserved1,proto3" json:"reserved1,omitempty"`                          //保留1 uint32型
	Reserved2        uint32         `protobuf:"varint,8,opt,name=reserved2,proto3" json:"reserved2,omitempty"`                          //保留2 uint32型
	Reserved3        string         `protobuf:"bytes,9,opt,name=reserved3,proto3" json:"reserved3,omitempty"`                           //保留3 string型
	Reserved4        string         `protobuf:"bytes,10,opt,name=reserved4,proto3" json:"reserved4,omitempty"`                          //保留4 string型
	Result           AuthResultCode `protobuf:"varint,11,opt,name=Result,proto3,enum=fippb.AuthResultCode" json:"Result,omitempty"`     //权限应答结果
}

func (x *NotifyToClient) Reset() {
	*x = NotifyToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fip_interface_cme_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyToClient) ProtoMessage() {}

func (x *NotifyToClient) ProtoReflect() protoreflect.Message {
	mi := &file_fip_interface_cme_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyToClient.ProtoReflect.Descriptor instead.
func (*NotifyToClient) Descriptor() ([]byte, []int) {
	return file_fip_interface_cme_proto_rawDescGZIP(), []int{0}
}

func (x *NotifyToClient) GetNotifyType() ENotfiyType {
	if x != nil {
		return x.NotifyType
	}
	return ENotfiyType_Notfiy_Base
}

func (x *NotifyToClient) GetExchgAuthResults() []*AuthResult {
	if x != nil {
		return x.ExchgAuthResults
	}
	return nil
}

func (x *NotifyToClient) GetNewDeviceNo() string {
	if x != nil {
		return x.NewDeviceNo
	}
	return ""
}

func (x *NotifyToClient) GetOldDeviceNo() string {
	if x != nil {
		return x.OldDeviceNo
	}
	return ""
}

func (x *NotifyToClient) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NotifyToClient) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotifyToClient) GetReserved1() uint32 {
	if x != nil {
		return x.Reserved1
	}
	return 0
}

func (x *NotifyToClient) GetReserved2() uint32 {
	if x != nil {
		return x.Reserved2
	}
	return 0
}

func (x *NotifyToClient) GetReserved3() string {
	if x != nil {
		return x.Reserved3
	}
	return ""
}

func (x *NotifyToClient) GetReserved4() string {
	if x != nil {
		return x.Reserved4
	}
	return ""
}

func (x *NotifyToClient) GetResult() AuthResultCode {
	if x != nil {
		return x.Result
	}
	return AuthResultCode_AuthUnknow
}

var File_fip_interface_cme_proto protoreflect.FileDescriptor

var file_fip_interface_cme_proto_rawDesc = []byte{
	0x0a, 0x17, 0x66, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x63, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x66, 0x69, 0x70, 0x70, 0x62,
	0x1a, 0x10, 0x66, 0x69, 0x70, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0e, 0x66, 0x69, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa0, 0x03, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x66, 0x69, 0x70, 0x70,
	0x62, 0x2e, 0x45, 0x4e, 0x6f, 0x74, 0x66, 0x69, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x45, 0x78, 0x63,
	0x68, 0x67, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x10, 0x45, 0x78, 0x63, 0x68, 0x67, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e,
	0x65, 0x77, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x6c,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x6c, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x33, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x34, 0x12, 0x2d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x8b, 0x01, 0x0a, 0x0b, 0x45, 0x4e, 0x6f, 0x74, 0x66, 0x69,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x66, 0x69, 0x79, 0x5f,
	0x42, 0x61, 0x73, 0x65, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x66, 0x69, 0x79,
	0x5f, 0x43, 0x4d, 0x45, 0x41, 0x75, 0x74, 0x68, 0x43, 0x68, 0x67, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x4e, 0x6f, 0x74, 0x66, 0x69, 0x79, 0x5f, 0x43, 0x4d, 0x45, 0x44, 0x65, 0x76, 0x43, 0x68,
	0x67, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x66, 0x69, 0x79, 0x5f, 0x4c, 0x32,
	0x41, 0x75, 0x74, 0x68, 0x43, 0x68, 0x67, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x6f, 0x74,
	0x66, 0x69, 0x79, 0x5f, 0x44, 0x41, 0x41, 0x75, 0x74, 0x68, 0x43, 0x68, 0x67, 0x10, 0x04, 0x12,
	0x12, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x66, 0x69, 0x79, 0x5f, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x10, 0x05, 0x42, 0x1b, 0x5a, 0x19, 0x66, 0x69, 0x70, 0x64, 0x65, 0x76, 0x2e, 0x64, 0x66,
	0x69, 0x74, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6e, 0x2f, 0x66, 0x69, 0x70, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fip_interface_cme_proto_rawDescOnce sync.Once
	file_fip_interface_cme_proto_rawDescData = file_fip_interface_cme_proto_rawDesc
)

func file_fip_interface_cme_proto_rawDescGZIP() []byte {
	file_fip_interface_cme_proto_rawDescOnce.Do(func() {
		file_fip_interface_cme_proto_rawDescData = protoimpl.X.CompressGZIP(file_fip_interface_cme_proto_rawDescData)
	})
	return file_fip_interface_cme_proto_rawDescData
}

var file_fip_interface_cme_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fip_interface_cme_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_fip_interface_cme_proto_goTypes = []interface{}{
	(ENotfiyType)(0),       // 0: fippb.ENotfiyType
	(*NotifyToClient)(nil), // 1: fippb.NotifyToClient
	(*AuthResult)(nil),     // 2: fippb.AuthResult
	(AuthResultCode)(0),    // 3: fippb.AuthResultCode
}
var file_fip_interface_cme_proto_depIdxs = []int32{
	0, // 0: fippb.NotifyToClient.NotifyType:type_name -> fippb.ENotfiyType
	2, // 1: fippb.NotifyToClient.ExchgAuthResults:type_name -> fippb.AuthResult
	3, // 2: fippb.NotifyToClient.Result:type_name -> fippb.AuthResultCode
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_fip_interface_cme_proto_init() }
func file_fip_interface_cme_proto_init() {
	if File_fip_interface_cme_proto != nil {
		return
	}
	file_fip_global_proto_init()
	file_fip_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fip_interface_cme_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fip_interface_cme_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fip_interface_cme_proto_goTypes,
		DependencyIndexes: file_fip_interface_cme_proto_depIdxs,
		EnumInfos:         file_fip_interface_cme_proto_enumTypes,
		MessageInfos:      file_fip_interface_cme_proto_msgTypes,
	}.Build()
	File_fip_interface_cme_proto = out.File
	file_fip_interface_cme_proto_rawDesc = nil
	file_fip_interface_cme_proto_goTypes = nil
	file_fip_interface_cme_proto_depIdxs = nil
}
