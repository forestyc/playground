//*
// Copyright (C) 2018-2019，大连商品交易所 大连飞创信息技术有限公司
//
// @file
// @brief 用户接口proto定义
//
// @author <ciys>
//
// @date 2018-12-13
// @note 组内评审专家：todo
// @note 组外评审专家：todo
// @note
// @modify

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: fip_user_rpc.proto

package fippb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fip_user_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_fip_user_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_fip_user_rpc_proto_rawDescGZIP(), []int{0}
}

var File_fip_user_rpc_proto protoreflect.FileDescriptor

var file_fip_user_rpc_proto_rawDesc = []byte{
	0x0a, 0x12, 0x66, 0x69, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x66, 0x69, 0x70, 0x70, 0x62, 0x1a, 0x0e, 0x66, 0x69, 0x70,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0xcc, 0x04, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x11, 0x49, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x42, 0x6f, 0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x66, 0x69, 0x70,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x0f, 0x2e, 0x66, 0x69,
	0x70, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x12, 0x3d, 0x0a, 0x13, 0x49, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x74,
	0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x56, 0x35, 0x12, 0x0f, 0x2e, 0x66, 0x69, 0x70, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x0f, 0x2e, 0x66, 0x69, 0x70,
	0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x34, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x14, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x1a, 0x0c, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0c, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x0e, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x50,
	0x61, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x32, 0x12, 0x0c, 0x2e, 0x66, 0x69,
	0x70, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x0e, 0x2e, 0x66, 0x69, 0x70, 0x70,
	0x62, 0x2e, 0x50, 0x61, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0f, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x35, 0x12, 0x0c,
	0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x0e, 0x2e, 0x66,
	0x69, 0x70, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x2d,
	0x0a, 0x07, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0f, 0x2e, 0x66, 0x69, 0x70, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x0f, 0x2e, 0x66, 0x69, 0x70,
	0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x00, 0x12, 0x2f, 0x0a,
	0x09, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56, 0x32, 0x12, 0x0f, 0x2e, 0x66, 0x69, 0x70,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x0f, 0x2e, 0x66, 0x69,
	0x70, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x00, 0x12, 0x2f,
	0x0a, 0x09, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56, 0x35, 0x12, 0x0f, 0x2e, 0x66, 0x69,
	0x70, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x0f, 0x2e, 0x66,
	0x69, 0x70, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x00, 0x12,
	0x2f, 0x0a, 0x09, 0x49, 0x73, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x66,
	0x69, 0x70, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x0f, 0x2e,
	0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x00,
	0x12, 0x31, 0x0a, 0x0b, 0x49, 0x73, 0x54, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x56, 0x35, 0x12,
	0x0f, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x1a, 0x0f, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x22, 0x00, 0x32, 0xc8, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x12, 0x12, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x1a, 0x12, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x52,
	0x73, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x6e, 0x64, 0x4e,
	0x75, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x71, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x1a, 0x12, 0x2e, 0x66, 0x69, 0x70,
	0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x73, 0x12, 0x13, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x51, 0x75,
	0x6f, 0x74, 0x41, 0x75, 0x74, 0x68, 0x73, 0x1a, 0x13, 0x2e, 0x66, 0x69, 0x70, 0x70, 0x62, 0x2e,
	0x52, 0x73, 0x70, 0x51, 0x75, 0x6f, 0x74, 0x41, 0x75, 0x74, 0x68, 0x73, 0x22, 0x00, 0x42, 0x1b,
	0x5a, 0x19, 0x66, 0x69, 0x70, 0x64, 0x65, 0x76, 0x2e, 0x64, 0x66, 0x69, 0x74, 0x63, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6e, 0x2f, 0x66, 0x69, 0x70, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_fip_user_rpc_proto_rawDescOnce sync.Once
	file_fip_user_rpc_proto_rawDescData = file_fip_user_rpc_proto_rawDesc
)

func file_fip_user_rpc_proto_rawDescGZIP() []byte {
	file_fip_user_rpc_proto_rawDescOnce.Do(func() {
		file_fip_user_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_fip_user_rpc_proto_rawDescData)
	})
	return file_fip_user_rpc_proto_rawDescData
}

var file_fip_user_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_fip_user_rpc_proto_goTypes = []interface{}{
	(*Empty)(nil),         // 0: fippb.Empty
	(*ReqLogin)(nil),      // 1: fippb.ReqLogin
	(*NotifyInvalid)(nil), // 2: fippb.NotifyInvalid
	(*Token)(nil),         // 3: fippb.Token
	(*ReqLoginNum)(nil),   // 4: fippb.ReqLoginNum
	(*ReqLoginLog)(nil),   // 5: fippb.ReqLoginLog
	(*ReqQuotAuths)(nil),  // 6: fippb.ReqQuotAuths
	(*RspLogin)(nil),      // 7: fippb.RspLogin
	(*PayLoad)(nil),       // 8: fippb.PayLoad
	(*RspLoginNum)(nil),   // 9: fippb.RspLoginNum
	(*RspLoginLog)(nil),   // 10: fippb.RspLoginLog
	(*RspQuotAuths)(nil),  // 11: fippb.RspQuotAuths
}
var file_fip_user_rpc_proto_depIdxs = []int32{
	1,  // 0: fippb.LoginService.IsloginBothStream:input_type -> fippb.ReqLogin
	1,  // 1: fippb.LoginService.IsloginBothStreamV5:input_type -> fippb.ReqLogin
	2,  // 2: fippb.LoginService.InvalidToken:input_type -> fippb.NotifyInvalid
	3,  // 3: fippb.LoginService.ValidateToken:input_type -> fippb.Token
	3,  // 4: fippb.LoginService.ValidateTokenV2:input_type -> fippb.Token
	3,  // 5: fippb.LoginService.ValidateTokenV5:input_type -> fippb.Token
	1,  // 6: fippb.LoginService.IsLogin:input_type -> fippb.ReqLogin
	1,  // 7: fippb.LoginService.IsLoginV2:input_type -> fippb.ReqLogin
	1,  // 8: fippb.LoginService.IsLoginV5:input_type -> fippb.ReqLogin
	1,  // 9: fippb.LoginService.IsTourist:input_type -> fippb.ReqLogin
	1,  // 10: fippb.LoginService.IsTouristV5:input_type -> fippb.ReqLogin
	4,  // 11: fippb.UserService.GetLoginNum:input_type -> fippb.ReqLoginNum
	5,  // 12: fippb.UserService.GetLoginInfoAndNumInfo:input_type -> fippb.ReqLoginLog
	6,  // 13: fippb.UserService.QueryUserAuths:input_type -> fippb.ReqQuotAuths
	7,  // 14: fippb.LoginService.IsloginBothStream:output_type -> fippb.RspLogin
	7,  // 15: fippb.LoginService.IsloginBothStreamV5:output_type -> fippb.RspLogin
	0,  // 16: fippb.LoginService.InvalidToken:output_type -> fippb.Empty
	8,  // 17: fippb.LoginService.ValidateToken:output_type -> fippb.PayLoad
	8,  // 18: fippb.LoginService.ValidateTokenV2:output_type -> fippb.PayLoad
	8,  // 19: fippb.LoginService.ValidateTokenV5:output_type -> fippb.PayLoad
	7,  // 20: fippb.LoginService.IsLogin:output_type -> fippb.RspLogin
	7,  // 21: fippb.LoginService.IsLoginV2:output_type -> fippb.RspLogin
	7,  // 22: fippb.LoginService.IsLoginV5:output_type -> fippb.RspLogin
	7,  // 23: fippb.LoginService.IsTourist:output_type -> fippb.RspLogin
	7,  // 24: fippb.LoginService.IsTouristV5:output_type -> fippb.RspLogin
	9,  // 25: fippb.UserService.GetLoginNum:output_type -> fippb.RspLoginNum
	10, // 26: fippb.UserService.GetLoginInfoAndNumInfo:output_type -> fippb.RspLoginLog
	11, // 27: fippb.UserService.QueryUserAuths:output_type -> fippb.RspQuotAuths
	14, // [14:28] is the sub-list for method output_type
	0,  // [0:14] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_fip_user_rpc_proto_init() }
func file_fip_user_rpc_proto_init() {
	if File_fip_user_rpc_proto != nil {
		return
	}
	file_fip_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fip_user_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fip_user_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_fip_user_rpc_proto_goTypes,
		DependencyIndexes: file_fip_user_rpc_proto_depIdxs,
		MessageInfos:      file_fip_user_rpc_proto_msgTypes,
	}.Build()
	File_fip_user_rpc_proto = out.File
	file_fip_user_rpc_proto_rawDesc = nil
	file_fip_user_rpc_proto_goTypes = nil
	file_fip_user_rpc_proto_depIdxs = nil
}
